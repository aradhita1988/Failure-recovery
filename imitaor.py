# -*- coding: utf-8 -*-
"""Imitaor

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zX3VFkrjv1BbHiRp3maUN5ptxoFJtPBa
"""

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from scipy.spatial.distance import squareform
import sklearn.metrics as sm
import scipy.cluster.hierarchy as shc 
import matplotlib.pyplot as plt
import networkx as nx
from sklearn.cluster import SpectralClustering
from scipy.cluster.hierarchy import dendrogram
import tensorflow as tf
import os
from sklearn.metrics import silhouette_score
from sklearn.cluster import AgglomerativeClustering
from collections import defaultdict

"""Degree of each node"""

def my_function(p1):
  import csv
  with open('file1.csv', mode='r') as csv_file:
     csv_reader = csv.DictReader(csv_file) 
     line_count=0
     for row in csv_reader:
        if row["v"]==p1:
          line_count=line_count+1
     return(line_count)

import csv

with open('file1.csv','r') as csvinput:
   
         #writer = csv.writer(csvoutput, lineterminator='\n')
         #writer = csv.writer(csvoutput)
         reader = csv.reader(csvinput)


         all = []
         row = next(reader)
         row.append('degree')
         all.append(row)
         for row in reader:
           #print(row[0])
                k=my_function(row[0])
           #print(k)
                row.append(k)
           #print(row)
                all.append(row)
                
               
         #writer.writerows(row) 
         #print(all)
         l=pd.DataFrame(all)
         print(l)
         l.to_csv('file2.csv',sep=',')

"""Imitator selection

```

```


"""

def my_function1(i):
 import csv
 with open('file2.csv', mode='r') as csv_file:
     csv_reader = csv.DictReader(csv_file) 
     max=0
     for row in csv_reader:
           if int(row["cluster"]) ==i:
            if int(row["degree"])>= max:
              #print(row["degree"])
              max=int(row["degree"])
              ver=row["vertex"]
           #print(max)   
     return(ver)

with open('file2.csv','r') as csvinput:
    #with open('gdrive/My Drive/Colab Notebooks/Ananda4.csv', 'w') as csvoutput:
         #writer = csv.writer(csvoutput, lineterminator='\n')
         #writer = csv.writer(csvoutput)
         reader = csv.reader(csvinput)
         all = []
         row = next(reader)
         row.append('imitator')
         all.append(row)
         #print(all)
         
         i=1
         while(i<=noofcluster):
                 for row in reader:
                   k=my_function1(i)  
            #print(k)
                   
                   row.append(k)
                   i=i+1
                   print(row)
                   all.append(row)
         print(all)
                
               
         #writer.writerows(row) 
         #print(all)
         i=1
         l=pd.DataFrame(all)
         print(l)
         l.to_csv('imitator.csv',sep=',')

"""Cluster list creation"""

def my_functionf(i):
 import csv
 with open('file1.csv', mode='r') as csv_file:
     reader = csv.reader(csv_file)

     filename="ccluster"
     index=str(i)
     f=filename+index+'.csv'
     print(f)
     path = r'path'
     
     with open(os.path.join(path, f), 'w') as fp:
        writer = csv.writer(fp)
        all = []
        row = next(reader)
        all.append(row)   
     for row in reader:
            if int(row[1])==i:
             #print(row)
             all.append(row)
     #
     l=pd.DataFrame(all)
     print(l)
     l.to_csv(os.path.join(path, f),sep=',')

    # uncomment below line if you want to create an empty file
       

 
     
     #with open(f, 'w', newline="") as file:
       #csvwriter = csv.writer(file)
       #csvwriter.writerows(l) 
 
i=1
while(i<=noofcluster):
  my_functionf(i)  
  #print(k)
  i=i+1

import csv
with open('file1.csv','r') as csvinput:
     reader = csv.reader(csvinput)
     all = []
     n= #no of cluster
     copy=(n-1)*2
     row = next(reader)
     for row in reader:
           #print(row[0])
           for i in range(1,copy+1):
               all.append(row[0])
     l=pd.DataFrame(all) 
     print(l) 
     l.to_csv('replica.csv',sep=',')

"""vertex imitaorlist"""

def my_function5(i):
  with open('imitator.csv','r') as csvinput:
     reader = csv.reader(csvinput)
     all = []
     row = next(reader)
     for row in reader:
           if row[1]==str(i):
             all.append(row[2])
                
               
         #writer.writerows(row) 
        
     l=pd.DataFrame(all)
     return(l)
         
   
with open('file1.csv','r') as csvinput1:
      reader1 = csv.reader(csvinput1)
      row = next(reader1) 
      all = []
      n=3
      for row in reader1:
        v=int(row[1])
       # print(v)
        for i in range(1,n+1):
          if i!=v:
           #k= my_function3(i) 
           k1= my_function5(i) 
           row.append(k)
           all.append(row)  
           
           ll1 = k1.to_string(header=None,index = False)
           
           with open("verteximitator.csv", 'a') as file1: 
             # for element in ll:
                file1.write(row[0])
                file1.write('\t')
                file1.write(ll1)
                file1.write('\n')

"""Append1 file contain vertex,cluster,imitator,set of replica for each vertex within a replica

Cluster list are created (which node which cluster)
"""

def my_function3(i):
  import csv
  filename="Cluster"
  index=str(i)
  f=filename+index+'.csv'
 # print(f)
  path = r'pathname'
  with open(os.path.join(path, f), 'r') as fp:
        reader = csv.reader(fp)
        all = []
        row = next(reader)
         #row.append('degree')
         #all.append(row)
        for row in reader:
           #print(row)
           all.append(row[1])
                
               
         #writer.writerows(row) 
         #print(all)
        l=pd.DataFrame(all)
        l = l.sample(n=2)
        return(l)
def my_function4(i):
  with open('imitator.csv','r') as csvinput:
     reader = csv.reader(csvinput)
     all = []
     row = next(reader)
     for row in reader:
           if row[1]==str(i):
             all.append(row[2])
                
               
         #writer.writerows(row) 
        
     l=pd.DataFrame(all)
     return(l)
         
   
with open('file1.csv','r') as csvinput1:
      reader1 = csv.reader(csvinput1)
      row = next(reader1) 
      all = []
      n=3
      for row in reader1:
        v=int(row[1])
       # print(v)
        for i in range(1,n+1):
          if i!=v:
           k= my_function3(i) 
           k1= my_function4(i) 
           row.append(k)
           all.append(row)  
           ll = k.to_string(header=None,index = False)
           ll1 = k1.to_string(header=None,index = False)
           #ll1=ll1+"\n"+ll1
           #print(ll1)
           #print(k1)
           
           with open("p1.csv", 'a') as file1:  
             # for element in ll:
                file1.write(ll)
                #file1.write('\t')
                #file1.write(ll1)
                file1.write('\n')
           with open("p2.csv", 'a') as file1: 
             # for element in ll:
                file1.write(ll1)
                #file1.write('\t')
                #file1.write(ll1)
                file1.write('\n')
                file1.write(ll1)
                file1.write('\n')     
                #print(element)
     # l=pd.DataFrame(all)
      
      #l.to_csv('gdrive/My Drive/Colab Notebooks/Adi.csv',sep=',')   
         #df.to_csv('gdrive/My Drive/Colab Notebooks/Abhi2.csv',sep=',') 

import csv
reader = csv.reader(open('file1.csv', 'r'))
reader1 = csv.reader(open('p1.csv', 'r'))
reader2 = csv.reader(open('p2.csv', 'r'))
writer = csv.writer(open('appended1.csv', 'w'))
for row in reader1:
    row1 = next(reader)
    row2=next(reader2)
    writer.writerow(row + row1+row2)

